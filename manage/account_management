// local state schema
assetid: uint64 // 0 if ALGO
energy: uint64 // total energy locked by A
speed: uint64 // speed of energy transfer from A to B
duration: uint64 // duration of call
B: byte // receiver of energy

// set env vars for terminal
export ALGORAND_DATA="$HOME/node/testnetdata"
export WALLET=2i2i_testnet
export CODE_DIR=./code
export TXNS_DIR=./txns
export OWNER=FA3Q2Q7MNOPTOSCPRKJPSSBZSBPINAVZAIBUXMYM3DJMBJQUHKGIYAFWQE
export FEE=L4ON2ZTYZF7ON6ZLJCPRNU7ZCUFYUZYFNE75O4FMZCT5QZYPOM4VT5EVCY
export A=OXLNT4UDWVQJRAD7RMZVKQFKZM2CRGLWP7R2BGWBWWXADOWYMWWXGAX7UU
export B=BUKIB5N5OWS73JDOCUDCDVY4FOOJABYY7IFUMB63DPBRVRWV6KVYE4UMUM
export STATE=29146267
export ESCROW=FZSBSTE7UUHUCQFRPVZICEJGYCXOAUM3GRAY5UERUAKI45T2ZIWQFYHDIA
export ASA=29147319
export LOCK_ALGO_FEE=4000
export LOCK_ASA_FEE=5000
export UNLOCK_FEE=1000
export ENERGY=100
export SPEED=2
export DURATION=5
export ENERGY_A=0
export ENERGY_FEE=10
export ENERGY_B=90

// start goal, create wallet and account
goal node start
goal node status
goal node end
goal wallet new $WALLET
goal account new -w $WALLET

// manage state dapp
goal app create --creator $OWNER --approval-prog $CODE_DIR/state_approvalprogram.teal --clear-prog $CODE_DIR/state_clearprogram.teal --global-byteslices 0 --global-ints 0 --local-byteslices 1 --local-ints 4 --extra-pages 0 --on-completion OptIn -w $WALLET
goal app optin --app-id $STATE --from $A -w $WALLET
goal app optin --app-id $STATE --from $B -w $WALLET
goal app update --app-id=$STATE --from=$OWNER --approval-prog $CODE_DIR/state_approvalprogram.teal --clear-prog $CODE_DIR/state_clearprogram.teal -w $WALLET

// manage stateless escrow account
goal clerk compile $CODE_DIR/escrow.teal -w $WALLET
goal clerk send --amount 1000000 --from $OWNER --to $ESCROW -w $WALLET

// manage ASA
// https://developer.algorand.org/docs/reference/cli/goal/asset/send/
goal asset create --creator $OWNER --total 1000000000 --unitname NOVALUE --decimals 0 -w $WALLET
goal asset send -a 0 --assetid $ASA -f $FEE -t $FEE -w $WALLET
goal asset send -a 0 --assetid $ASA -f $A -t $A -w $WALLET
goal asset send -a 0 --assetid $ASA -f $B -t $B -w $WALLET
goal asset send -a 0 --assetid $ASA -f $ESCROW -t $ESCROW --out=$TXNS_DIR/optin.txn
goal clerk sign -i $TXNS_DIR/optin.txn -p $CODE_DIR/escrow.teal -o $TXNS_DIR/optin.stxn
goal clerk rawsend -f $TXNS_DIR/optin.stxn
goal asset send -a 1000 --assetid $ASA -f $OWNER -t $A -w $WALLET

// check values
echo ASA $ASA
echo STATE $STATE
echo OWNER $OWNER
goal account balance -a $OWNER
goal account info -a $OWNER
echo FEE $FEE
goal account balance -a $FEE
goal account info -a $FEE
echo A $A
goal account balance -a $A
goal account info -a $A
echo B $B
goal account balance -a $B
goal account info -a $B
echo ESCROW $ESCROW
goal account balance -a $ESCROW
goal account info -a $ESCROW
goal app read --app-id=$STATE --local --from=$A


/////////
// Clear state
goal app call --from=$A --app-id=$STATE --app-arg="str:CLEAR" -w $WALLET
/////////

// debugging - not really working
goal clerk dryrun -t $TXNS_DIR/signout.txn
goal clerk dryrun -t $TXNS_DIR/signout.txn --dryrun-dump  -o $TXNS_DIR/dr.json
tealdbg debug $CODE_DIR/state_approvalprogram.teal -d $TXNS_DIR/dr.msgp --group-index 0