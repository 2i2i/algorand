// local state schema
assetid: uint64 // 0 if ALGO
energy: uint64 // total energy locked by A
speed: uint64 // speed of energy transfer from A to B
duration: uint64 // duration of call
B: byte // receiver of energy

// set env vars for terminal
export ALGORAND_DATA="$HOME/node/betanetdata"
export WALLET=2i2i_testnet_v5
export CODE_DIR=./code
export TXNS_DIR=./txns
export SYSTEM_APPROVAL_FILE=$CODE_DIR/state_approval_program_v5.teal
export SYSTEM_CLEAR_FILE=$CODE_DIR/state_clear_program_v5.teal
export CREATOR=KTNEHVYFHJIWSTWZ7SQJSSA24JHTX3KXUABO64ZQTRCBFIM3EMCXVMBD6M
export A=O6XHGFRHONE5JF6MK3FUEFOR6B2GFOKHNNHYDFS7SF6PIVMPULW3TUFDU4
export B=TI25CIA3XSYCQKCGUZLBWF5XNZ4BO7GERELKI4KHKVXEPHZF5LA4I47PFI
export SYSTEM_ID=419713242
export SYSTEM_ACCOUNT=Y3VM46DMHVME77SI3XEI2KIDJSDZQKSMOSGT55I5YO6UDPKDKUBHYY56AM
export ASA=430512768
export LOCK_ALGO_FEE=4000
export LOCK_ASA_FEE=5000
export OPT_IN_ASA_FEE=201000
export UNLOCK_FEE=1000
export SPEED=2
export DURATION=5
export ENERGY=100
export ENERGY_A=90
export ENERGY_FEE=1
export ENERGY_B=9

// start goal, create wallet and account
goal node start
goal node status
goal node end
goal wallet new $WALLET
goal account new -w $WALLET

// manage state dapp
goal app create --creator $CREATOR --approval-prog $SYSTEM_APPROVAL_FILE --clear-prog $SYSTEM_CLEAR_FILE --global-byteslices 0 --global-ints 0 --local-byteslices 1 --local-ints 4 --extra-pages 0 --on-completion OptIn -w $WALLET
goal app optin --app-id $SYSTEM_ID --from $A -w $WALLET
goal app optin --app-id $SYSTEM_ID --from $B -w $WALLET
goal app update --app-id=$SYSTEM_ID --from=$CREATOR --approval-prog $SYSTEM_APPROVAL_FILE --clear-prog $SYSTEM_CLEAR_FILE -w $WALLET

// manage ASA
// https://developer.algorand.org/docs/reference/cli/goal/asset/send/
goal asset create --creator $CREATOR --total 1000000000 --unitname NOVALUE --decimals 0 -w $WALLET
goal asset send -a 0 --assetid $ASA -f $A -t $A -w $WALLET
goal asset send -a 0 --assetid $ASA -f $B -t $B -w $WALLET
goal asset send -a 0 --assetid $ASA -f $SYSTEM_ACCOUNT -t $SYSTEM_ACCOUNT --out=$TXNS_DIR/optin.txn
goal clerk sign -i $TXNS_DIR/optin.txn -p $SYSTEM_APPROVAL_FILE -o $TXNS_DIR/optin.stxn
goal clerk rawsend -f $TXNS_DIR/optin.stxn
goal asset send -a 1000 --assetid $ASA -f $CREATOR -t $A -w $WALLET

// check values
echo ASA $ASA
echo SYSTEM_ID $SYSTEM_ID
echo SYSTEM_ACCOUNT $SYSTEM_ACCOUNT
goal account balance -a $SYSTEM_ACCOUNT
goal account info -a $SYSTEM_ACCOUNT
echo CREATOR $CREATOR
goal account balance -a $CREATOR
goal account info -a $CREATOR
echo A $A
goal account balance -a $A
goal account info -a $A
echo B $B
goal account balance -a $B
goal account info -a $B
goal app read --app-id=$SYSTEM_ID --local --from=$A

/////////
// Clear state - not implemented
# goal app call --from=$A --app-id=$SYSTEM --app-arg="str:CLEAR" -w $WALLET
/////////